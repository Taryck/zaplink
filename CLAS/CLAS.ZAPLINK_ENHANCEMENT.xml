<?xml version="1.0" encoding="utf-16"?>
<ZL_OBJECT CHECKSUM="DC09F2E4DF19F62505047D6456E74EA7" CODE_SIGNATURE="BAE4D1FE46B49628FBC198ACD078D962" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_ENHANCEMENT" TYPE="CLAS" VERSION="1.01">
 <DEPENDENCIES>
  <ITEM TYPE="CLAS" NAME="ZAPLINK_CONNECTOR_"/>
 </DEPENDENCIES>
 <DIRECTORY DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
 <RAW>
  <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" CLSCCINCL="X" FIXPT="X" UNICODE="X">
   <INHERITANCE REFCLSNAME="ZAPLINK_CONNECTOR_" STATE="1"/>
   <TEXTS>
    <ITEM LANG="E" TEXT="ZAP Link Connector : BADI Definitions &amp; Implementations">U1&amp;FUNCTIONALITY&amp;
ASIs a connector for :
AS- SXSD : BADI Definition
AS- SXCI : BADI Implementation
U1&amp;RELATIONS&amp;
ASIs part of ZAP Link Framework as Official Connector.
ASRequire Official connector for Object types (CLAS &amp; INTF).
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AShttps://code.google.com/p/zaplink/wiki/Connector
U1Memories
ASThis application is dedicated to the memories of :
B2My father : Lamri BENSIALI (1940-2004) without whom I never started
  programming
B2My uncle : Jacky BEDU (1934-2009) who died during the completion of this
  application</ITEM>
   </TEXTS>
  </A0_MAINDATA>
  <ATTRIBUTS>
   <ITEM CMPNAME="BALLOG_SUBOBJECT" EXPOSURE="2" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;CNX_ENHENCEMENT&apos;" TYPTYPE="1" TYPE="BALSUBOBJ">
    <TEXTS>
     <ITEM LANG="E" TEXT="Application Log: Subobject"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="R_DOC_ID_DEFINITION" STATE="1" ATTDECLTYP="1" TYPTYPE="1" TYPE="TR_DOCID"/>
   <ITEM CMPNAME="R_DOC_ID_IMPLEMENTATION" STATE="1" ATTDECLTYP="1" TYPTYPE="1" TYPE="TR_DOCID"/>
   <ITEM CMPNAME="ST_COMP_ENH_IMPL" EXPOSURE="2" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;ENHC&apos;" TYPTYPE="1" TYPE="TD_COMPTYPE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Transport category : Composit Enhancement Implementation"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="ST_COMP_ENH_SPOT" EXPOSURE="2" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;ENSC&apos;" TYPTYPE="1" TYPE="TD_COMPTYPE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Transport category : Compisit Enhancement Spot"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="ST_ENH_IMPL" EXPOSURE="2" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;ENHO&apos;" TYPTYPE="1" TYPE="TD_COMPTYPE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Transport category : Enhancement Implementation"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="ST_ENH_SPOT" EXPOSURE="2" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;ENHS&apos;" TYPTYPE="1" TYPE="TD_COMPTYPE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Transport category : Enhancement Spot"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_UUID" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;4181014E2AC27D33E1000000AC1201D6&apos;" TYPTYPE="1" TYPE="TD_CONNUUID">
    <TEXTS>
     <ITEM LANG="E" TEXT="UUID for connector BADI"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_VER" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;0.0&apos;" TYPTYPE="1" TYPE="TD_CONNVER">
    <TEXTS>
     <ITEM LANG="E" TEXT="Connector Version"/>
    </TEXTS>
   </ITEM>
  </ATTRIBUTS>
  <LOCAL>
   <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE</TYPES>
   <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
   <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS

INCLUDE zaplink_macros.</MACROS>
  </LOCAL>
  <METHODS>
   <ITEM CMPNAME="CLASS_CONSTRUCTOR" EXPOSURE="2" STATE="1" MTDTYPE="2" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="CLASS_CONSTRUCTOR"/>
    </TEXTS>
    <SOURCE>`
*table TDCLT
*DOKCLASS DOKTITEL
*BI       Business Add-Ins: Implementations
  DATA _id LIKE LINE OF r_doc_id_definition.

  _id-sign = &apos;I&apos;.
  _id-option = &apos;EQ&apos;.
  _id-low = &apos;HY&apos;. APPEND _id TO r_doc_id_definition.

  _id-low = &apos;BI&apos;. APPEND _id TO r_doc_id_implementation.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONSTRUCTOR" EXPOSURE="2" STATE="1" MTDTYPE="2">
    <TEXTS>
     <ITEM LANG="E" TEXT="CONSTRUCTOR"/>
    </TEXTS>
    <SOURCE>`
  DATA type LIKE LINE OF supported_types.

  CALL METHOD super-&gt;constructor.
  mac_create_log application_log ballog_subobject space.
  type-type = st_enh_spot.        INSERT type INTO TABLE supported_types.
  type-type = st_comp_enh_spot.   INSERT type INTO TABLE supported_types.
  type-type = st_enh_impl.        INSERT type INTO TABLE supported_types.
  type-type = st_comp_enh_impl.   INSERT type INTO TABLE supported_types.

  uuid = _uuid.
  version = _ver.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONVERT_COMP_ENH_IMPL" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Convert Composit Enhancement Implementation (SAP obj) to RAW"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENTS_LIST" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_LIST"/>
     <ITEM SCONAME="RAW_OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_COMP_ENH_IMPL">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Composit Enhancement Implementation"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SAP_OBJECT" CMPTYPE="1" TYPTYPE="1" TYPE="TO_COMP_ENH_IMPL_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Composite"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SUB_COMPONENTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_WITH_SUBCOMP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Composite Enhancement Spot"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA s_comp         TYPE zaplink_enhc_data=&gt;ts_fm_data.
  DATA version        TYPE r3state.
  DATA o_enh          TYPE to_enh_impl_sap.
  DATA o_comp         TYPE to_comp_enh_impl_sap.
  FIELD-SYMBOLS:
    &lt;enh&gt;   LIKE LINE OF raw_object-&gt;enhancement_implementations,
    &lt;comp&gt;  LIKE LINE OF raw_object-&gt;composit_enh_implementations.

  ASSERT sap_object IS BOUND.
  CREATE OBJECT raw_object.
  version = get_version( sap_object ).
  s_comp-header = sap_object-&gt;get_enhcompheader( version ).
  s_comp-comp_enh = sap_object-&gt;if_enh_composite~get_composite_childs( version ).
  s_comp-enh = sap_object-&gt;if_enh_composite~get_enh_childs( version ).
  raw_object-&gt;from_data( s_comp ).

  IF sub_components = abap_true.
    LOOP AT raw_object-&gt;enhancement_implementations ASSIGNING &lt;enh&gt;.
      o_enh = _load_enh_impl( &lt;enh&gt;-name ).
      CREATE OBJECT &lt;enh&gt;-zl_object.
      &lt;enh&gt;-zl_object-&gt;raw = convert_enh_impl( sap_object = o_enh
                                           sub_components = sub_components
                                          components_list = components_list ).
      IF &lt;enh&gt;-zl_object IS BOUND.      CLEAR &lt;enh&gt;-name.       ENDIF.
    ENDLOOP.

    LOOP AT raw_object-&gt;composit_enh_implementations ASSIGNING &lt;comp&gt;.
      o_comp = _load_comp_enh_impl( &lt;comp&gt;-name ).
      CREATE OBJECT &lt;comp&gt;-zl_object.
      &lt;comp&gt;-zl_object-&gt;raw = convert_comp_enh_impl( sap_object = o_comp
                                                 sub_components = sub_components
                                                components_list = components_list ).
      IF &lt;comp&gt;-zl_object IS BOUND.      CLEAR &lt;comp&gt;-name.       ENDIF.
    ENDLOOP.
  ENDIF.
  CLEAR raw_object-&gt;a0_maindata-enhcomposite.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONVERT_COMP_ENH_SPOT" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Convert Composit Enhancement Spot (SAP object) to RAW data"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENTS_LIST" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_LIST"/>
     <ITEM SCONAME="RAW_OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_COMP_ENH_SPOT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Composit Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SAP_OBJECT" CMPTYPE="1" TYPTYPE="1" TYPE="TO_COMP_ENH_SPOT_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Composite"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SUB_COMPONENTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_WITH_SUBCOMP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Composite Enhancement Spot"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA s_comp         TYPE zaplink_ensc_data=&gt;ts_fm_data.
  DATA version        TYPE r3state.
*  DATA short_id       TYPE sotr_conc.
*  DATA long_id        TYPE sotr_conc.
  DATA o_enh          TYPE to_enh_spot_sap.
  DATA o_comp         TYPE to_comp_enh_spot_sap.
  FIELD-SYMBOLS:
    &lt;enh&gt;   LIKE LINE OF raw_object-&gt;enhancements,
    &lt;comp&gt;  LIKE LINE OF raw_object-&gt;composit_enhancements.

  ASSERT sap_object IS BOUND.
  CREATE OBJECT raw_object.
  version = get_version( sap_object ).
  s_comp-header = sap_object-&gt;get_enhspotcomphead( version ).
*  short_id = s_comp-header-shorttextid.
*  long_id = s_comp-header-docuid.
*  CLEAR: s_comp-header-shorttextid, s_comp-header-docuid.
  s_comp-comp_enh = sap_object-&gt;if_enh_spot_composite~get_composite_childs( version ).
  s_comp-enh = sap_object-&gt;if_enh_spot_composite~get_enh_spot_childs( version ).
  raw_object-&gt;from_data( s_comp ).

  IF sub_components = abap_true.
    LOOP AT raw_object-&gt;enhancements ASSIGNING &lt;enh&gt;.
      o_enh = _load_enh_spot( &lt;enh&gt;-name ).
      CREATE OBJECT &lt;enh&gt;-zl_object.
      &lt;enh&gt;-zl_object-&gt;raw = convert_enh_spot( sap_object = o_enh
                                           sub_components = sub_components
                                          components_list = components_list ).
      IF &lt;enh&gt;-zl_object IS BOUND.      CLEAR &lt;enh&gt;-name.       ENDIF.
    ENDLOOP.

    LOOP AT raw_object-&gt;composit_enhancements ASSIGNING &lt;comp&gt;.
      o_comp = _load_comp_enh_spot( &lt;comp&gt;-name ).
      CREATE OBJECT &lt;comp&gt;-zl_object.
      &lt;comp&gt;-zl_object-&gt;raw = convert_comp_enh_spot( sap_object = o_comp
                                                 sub_components = sub_components
                                                components_list = components_list ).
      IF &lt;comp&gt;-zl_object IS BOUND.      CLEAR &lt;comp&gt;-name.       ENDIF.
    ENDLOOP.
  ENDIF.
  CLEAR raw_object-&gt;a0_maindata-enhspotcomposite.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONVERT_ENHANCEMENT" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Convert Enhancement (SAP object) to RAW data"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENTS_LIST" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_LIST"/>
     <ITEM SCONAME="RAW_OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_RAW_DATA"/>
     <ITEM SCONAME="SAP_OBJECT" CMPTYPE="1" TYPTYPE="1" TYPE="TO_ENHANCEMENT_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="General Methods for Enhancement Objects"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SUB_COMPONENTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_WITH_SUBCOMP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Composite Enhancement Spot"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA o_ces      TYPE to_comp_enh_spot_sap.
  DATA o_es       TYPE to_enh_spot_sap.
  DATA o_cei      TYPE to_comp_enh_impl_sap.
  DATA o_ei       TYPE to_enh_impl_sap.

* Composit Enhancement Spot
  TRY.
      o_ces ?= sap_object.
      raw_object = convert_comp_enh_spot( sap_object = o_ces
                                      sub_components = sub_components
                                     components_list = components_list ).
    CATCH cx_sy_move_cast_error.    &quot; Wrong Type
  ENDTRY.
  CHECK raw_object IS NOT BOUND.

* Enhancement Spot
  TRY.
      o_es ?= sap_object.
      raw_object = convert_enh_spot( sap_object = o_es
                                 sub_components = sub_components
                                components_list = components_list ).
    CATCH cx_sy_move_cast_error.    &quot; Wrong Type
  ENDTRY.
  CHECK raw_object IS NOT BOUND.

* Composit Enhancement Implementation
  TRY.
      o_cei ?= sap_object.
      raw_object = convert_comp_enh_impl( sap_object = o_cei
                                      sub_components = sub_components
                                     components_list = components_list ).
    CATCH cx_sy_move_cast_error.    &quot; Wrong Type
  ENDTRY.
  CHECK raw_object IS NOT BOUND.

* Enhancement Implementation
  TRY.
      o_ei ?= sap_object.
      raw_object = convert_enh_impl( sap_object = o_ei
                                 sub_components = sub_components
                                components_list = components_list ).
    CATCH cx_sy_move_cast_error.    &quot; Wrong Type
  ENDTRY.
  ASSERT raw_object IS BOUND.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONVERT_ENH_IMPL" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Convert Enhancement Implementation (SAP object) to RAW data"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENTS_LIST" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_LIST"/>
     <ITEM SCONAME="RAW_OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ENH_IMPL">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Enhancement Implementation"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SAP_OBJECT" CMPTYPE="1" TYPTYPE="1" TYPE="TO_ENH_IMPL_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Tool Redefinition BAdI"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SUB_COMPONENTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_WITH_SUBCOMP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Composite Enhancement Spot"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA s_comp         TYPE zaplink_enho_data=&gt;ts_fm_data.
  DATA version        TYPE r3state.
  Data name           TYPE ENHNAME.

  ASSERT sap_object IS BOUND.
  CREATE OBJECT raw_object.
  version = get_version( sap_object ).
  name = s_comp-header-spot_name = sap_object-&gt;get_spot_name( version ).
  s_comp-impl_data = sap_object-&gt;get_implementations( version ).
* From : Module STATUS_0100 in SAPLENHANCEMENT_EDITOR
  s_comp-header-composite = cl_enh_factory=&gt;enh_find_parent_composite( name ) .
* From : FORM lesen_sfw in SAPLENHANCEMENT_EDITOR
*  l_wa_swf-objecttype = &apos;ENHO&apos;.
*  l_wa_swf-objectname = i_objekt.
*
*  APPEND l_wa_swf TO l_it_swf.
*
*  CALL FUNCTION &apos;SFW_GET_SWITCHPOS&apos;
*    EXPORTING
*      provide_text = &apos;X&apos;
*    TABLES
*      switchtab    = l_it_swf.
*
*  SORT l_it_swf BY objecttype
*                   objectname.
*
*  READ TABLE l_it_swf WITH KEY objecttype = g_object_type    &quot;&apos;ENHO&apos;
*                               objectname = enh_edt_layout-object1
*                      INTO l_wa_swf BINARY SEARCH.
*
*  IF sy-subrc = 0.
*    MOVE :
*       l_wa_swf-state        TO p_switch_pos,
*       l_wa_swf-text         TO p_switch_text,
*       l_wa_swf-switch_id    TO p_switch_id.
*  ENDIF.

* IF_ENH_PERSIST~LOAD_LOGS =&gt; Creation date

  raw_object-&gt;from_data( s_comp ).

*  IF sub_components = abap_true.
*  ENDIF.
  CLEAR raw_object-&gt;a0_maindata-composite.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONVERT_ENH_SPOT" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Convert Enhancement Spot (SAP object) to RAW data"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENTS_LIST" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_LIST"/>
     <ITEM SCONAME="RAW_OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ENH_SPOT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Composit Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SAP_OBJECT" CMPTYPE="1" TYPTYPE="1" TYPE="TO_ENH_SPOT_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Tool BAdI"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SUB_COMPONENTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_WITH_SUBCOMP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Composite Enhancement Spot"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA s_comp         TYPE zaplink_enhs_data=&gt;ts_fm_data.
  DATA version        TYPE r3state.

  ASSERT sap_object IS BOUND.
  CREATE OBJECT raw_object.
  version = get_version( sap_object ).
  s_comp-def_data = sap_object-&gt;get_badi_defs( version ).
  raw_object-&gt;from_data( s_comp ).

*  IF sub_components = abap_true.
*  ENDIF.
  CLEAR raw_object-&gt;a0_maindata-enhspotcomposite.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_VERSION" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Get Version of Enhancement (from SAP Object)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="ENHANCEMENT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_ENH_OBJECT">
      <TEXTS>
       <ITEM LANG="E" TEXT="General Methods for Enhancement Objects"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="VERSION" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="R3STATE">
      <TEXTS>
       <ITEM LANG="E" TEXT="ABAP: Program Status (Active, Saved, Transported...)"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  IF enhancement-&gt;has_active_version( ) = abap_true.
    version = &apos;A&apos;.
  ELSE.
    version = &apos;I&apos;.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="IMPORT_TO_COMP_ENH_SPOT" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Import Composit Enhancement Spot to SAP"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENTS" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_LIST"/>
     <ITEM SCONAME="O_DATA" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMP_ENH_SPOT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Composit Enhancement Spot"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="ZAPlink ROOT Exception for Connectors"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  DATA s_comp     TYPE zaplink_ensc_data=&gt;ts_fm_data.
  DATA o_comp     TYPE REF TO if_enh_spot_composite.    &quot;cl_enh_spot_composite.

  s_comp = o_data-&gt;to_data( ).
  CALL METHOD cl_r3standard_persistence=&gt;create_spot_composite
    EXPORTING
      name      = o_data-&gt;a0_maindata-enhspotcomposite
      scwb_call = abap_false
      run_dark  = abap_true
    IMPORTING
      composite = o_comp
*          CHANGING
*            trkorr    = trkorr
*            devclass  = devclass
    .
*  o_comp-&gt;set_shorttext( l_text ).
*  o_comp-&gt;add_composite_child( enhspotcompcreate-enhspotcomposite ).
*  o_comp-&gt;add_enh_spot_child( ).
  o_comp-&gt;if_enh_object~save( ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="LOAD_COMP_ENH_IMPL" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Load Enhancement Implementation as SAP object"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Composite Enhancement Implementation"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_COMP_ENH_IMPL_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Composite"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA _name      TYPE td_enh_impl_name.

  ASSERT component-&gt;get_type( ) = st_comp_enh_impl.
  _name = component-&gt;get_name( ).

  object ?= _load_comp_enh_impl( _name ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="LOAD_COMP_ENH_SPOT" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Load Composit Enhancement Spot as SAP object"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Composite Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_COMP_ENH_SPOT_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Composite"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA _name      TYPE td_comp_enh_spot_name.

  ASSERT component-&gt;get_type( ) = st_comp_enh_spot.
  _name = component-&gt;get_name( ).

  object ?= _load_comp_enh_spot( _name ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="LOAD_ENHANCEMENT" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Load Enhancement as SAP object"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ENHANCEMENT_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="General Methods for Enhancement Objects"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="ZAPlink ROOT Exception for Connectors"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  DATA d_type         TYPE td_comptype.

  TRY.
    d_type = component-&gt;get_type( ).
    CASE d_type.
      WHEN st_enh_spot.
        object = load_enh_spot( component ).
      WHEN st_comp_enh_spot.
        object = load_comp_enh_spot( component ).
      WHEN st_enh_impl.
        object = load_enh_impl( component ).
      WHEN st_comp_enh_impl.
        object = load_comp_enh_impl( component ).
      WHEN OTHERS.
        mac_raise_type_not_supported me-&gt;class_name d_type.
    ENDCASE.
    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="LOAD_ENH_IMPL" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Load Enhancement Implementation as SAP object"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Implementation"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ENH_IMPL_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Tool Redefinition BAdI"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA _name      TYPE td_enh_impl_name.

  ASSERT component-&gt;get_type( ) = st_enh_impl.
  _name = component-&gt;get_name( ).

  object ?= _load_enh_impl( _name ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="LOAD_ENH_SPOT" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Load Enhancement Spot as SAP object"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ENH_SPOT_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Tool BAdI"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA _name      TYPE td_enh_spot_name.

  ASSERT component-&gt;get_type( ) = st_enh_spot.
  _name = component-&gt;get_name( ).

  object ?= _load_enh_spot( _name ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="OFF_EXPORT_FROM_COMP_ENH_IMPL" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Export Composit Enhancement Implementation from SAP"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Component to export"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_COMP_ENH_IMPL">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Composit Enhancement Implementation"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="ZAPlink ROOT Exception for Connectors"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  DATA f_subcomp  TYPE td_with_subcomp.
  DATA o_list     TYPE to_list.
  DATA o_sap_intf TYPE to_comp_enh_impl_sap.

  TRY.
    o_sap_intf = load_comp_enh_impl( component ).
    ASSERT o_sap_intf is bound.

    f_subcomp = component-&gt;get_with_subcomp( ).
    CREATE OBJECT o_list.
    component-&gt;set_subcomponents( o_list ).

*    object = convert_comp_enh_spot( sap_object = o_sap_intf
*                                sub_components = f_subcomp
*                               components_list = o_list ).

    TRY.
        o_list-&gt;remove( component ).
      CATCH zaplink_cx_list.
    ENDTRY.

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="OFF_EXPORT_FROM_COMP_ENH_SPOT" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Export Composit Enhancement Spot from SAP"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Component to export"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_COMP_ENH_SPOT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Composit Enhancement Spot"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="ZAPlink ROOT Exception for Connectors"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  DATA f_subcomp  TYPE td_with_subcomp.
  DATA o_list     TYPE to_list.
  DATA o_sap_intf TYPE to_comp_enh_spot_sap.

  TRY.
    o_sap_intf = load_comp_enh_spot( component ).
    ASSERT o_sap_intf is bound.

    f_subcomp = component-&gt;get_with_subcomp( ).
    CREATE OBJECT o_list.
    component-&gt;set_subcomponents( o_list ).

    object = convert_comp_enh_spot( sap_object = o_sap_intf
                                sub_components = f_subcomp
                               components_list = o_list ).

    TRY.
        o_list-&gt;remove( component ).
      CATCH zaplink_cx_list.
    ENDTRY.

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="OFF_EXPORT_FROM_ENHANCEMENT" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Export Enhancement from SAP"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Component to export"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_RAW"/>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="ZAPlink ROOT Exception for Connectors"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
*  DATA f_subcomp  TYPE td_with_subcomp.
*  DATA o_list     TYPE to_list.
*  DATA o_sap_intf TYPE to_enhancement_sap.
*
*  TRY.
*    o_sap_intf = load_comp_enh_spot( component ).
*    ASSERT o_sap_intf is bound.
*
*    f_subcomp = component-&gt;get_with_subcomp( ).
*    CREATE OBJECT o_list.
*    component-&gt;set_subcomponents( o_list ).
*
*    object = convert_enhancement( sap_object = o_sap_intf
*                              sub_components = f_subcomp
*                             components_list = o_list ).
*
*    TRY.
*        o_list-&gt;remove( component ).
*      CATCH zaplink_cx_list.
*    ENDTRY.
*
*    mac_def_catch zaplink_cx_connector.
*  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="OFF_EXPORT_FROM_ENH_IMPL" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Export Enhancement Implementation from SAP"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Component to export"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ENH_IMPL">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Enhancement Implementation"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="ZAPlink ROOT Exception for Connectors"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  DATA f_subcomp  TYPE td_with_subcomp.
  DATA o_list     TYPE to_list.
  DATA o_sap_intf TYPE to_comp_enh_spot_sap.

  TRY.
    o_sap_intf = load_comp_enh_spot( component ).
    ASSERT o_sap_intf is bound.

    f_subcomp = component-&gt;get_with_subcomp( ).
    CREATE OBJECT o_list.
    component-&gt;set_subcomponents( o_list ).

*    object = convert_comp_enh_spot( sap_object = o_sap_intf
*                                sub_components = f_subcomp
*                               components_list = o_list ).

    TRY.
        o_list-&gt;remove( component ).
      CATCH zaplink_cx_list.
    ENDTRY.

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="OFF_EXPORT_FROM_ENH_SPOT" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Export Enhancement Spot from SAP"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Component to export"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ENH_SPOT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Enhancement Spot"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="ZAPlink ROOT Exception for Connectors"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
*  DATA f_subcomp  TYPE td_with_subcomp.
*  DATA o_list     TYPE to_list.
*  DATA o_sap_intf TYPE to_comp_enh_spot_sap.
*
*  TRY.
*
*    o_sap_intf = load_comp_enh_spot( component ).
*    ASSERT o_sap_intf is bound.
*
*    f_subcomp = component-&gt;get_with_subcomp( ).
*    CREATE OBJECT o_list.
*    component-&gt;set_subcomponents( o_list ).
*
*    object = convert_enh_spot( sap_object = o_sap_intf
*                           sub_components = f_subcomp
*                          components_list = o_list ).
*
*    TRY.
*        o_list-&gt;remove( component ).
*      CATCH zaplink_cx_list.
*    ENDTRY.
*
*    mac_def_catch zaplink_cx_connector.
*  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="REVERSE_COMP_ENH_IMPL" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Convert Composit Enhancement Implementation RAW data to SAP"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENTS_LIST" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_LIST"/>
     <ITEM SCONAME="OFF_SUB_COMPONENTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_WITH_SUBCOMP" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Composite Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RAW_OBJECT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMP_ENH_IMPL">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Composit Enhancement Implementation"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SAP_OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_COMP_ENH_IMPL_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Composite"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
*  DATA s_comp         TYPE zaplink_enhc_data=&gt;ts_fm_data.
*  DATA version        TYPE r3state.
*  DATA o_enh          TYPE to_enh_impl_sap.
*  DATA o_comp         TYPE to_comp_enh_impl_sap.
*  FIELD-SYMBOLS:
*    &lt;enh&gt;   LIKE LINE OF raw_object-&gt;enhancement_implementations,
*    &lt;comp&gt;  LIKE LINE OF raw_object-&gt;composit_enh_implementations.
*
*  ASSERT sap_object IS BOUND.
*  CREATE OBJECT raw_object.
*  version = get_version( sap_object ).
*  s_comp-header = sap_object-&gt;get_enhcompheader( version ).
*  s_comp-comp_enh = sap_object-&gt;if_enh_composite~get_composite_childs( version ).
*  s_comp-enh = sap_object-&gt;if_enh_composite~get_enh_childs( version ).
*  raw_object-&gt;from_data( s_comp ).
*
*  IF sub_components = abap_true.
*    LOOP AT raw_object-&gt;enhancement_implementations ASSIGNING &lt;enh&gt;.
*      o_enh = _load_enh_impl( &lt;enh&gt;-name ).
*      CREATE OBJECT &lt;enh&gt;-zl_object.
*      &lt;enh&gt;-zl_object-&gt;raw = convert_enh_impl( sap_object = o_enh
*                                           sub_components = sub_components
*                                          components_list = components_list ).
*      IF &lt;enh&gt;-zl_object IS BOUND.      CLEAR &lt;enh&gt;-name.       ENDIF.
*    ENDLOOP.
*
*    LOOP AT raw_object-&gt;composit_enh_implementations ASSIGNING &lt;comp&gt;.
*      o_comp = _load_comp_enh_impl( &lt;comp&gt;-name ).
*      CREATE OBJECT &lt;comp&gt;-zl_object.
*      &lt;comp&gt;-zl_object-&gt;raw = convert_comp_enh_impl( sap_object = o_comp
*                                                 sub_components = sub_components
*                                                components_list = components_list ).
*      IF &lt;comp&gt;-zl_object IS BOUND.      CLEAR &lt;comp&gt;-name.       ENDIF.
*    ENDLOOP.
*  ENDIF.
*  CLEAR raw_object-&gt;a0_maindata-enhcomposite.
*</SOURCE>
   </ITEM>
   <ITEM CMPNAME="REVERSE_COMP_ENH_SPOT" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Convert Composit Enhancement Spot RAW data to SAP object"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENTS_LIST" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_LIST"/>
     <ITEM SCONAME="OFF_SUB_COMPONENTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_WITH_SUBCOMP" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="OFF Composite Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RAW_OBJECT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMP_ENH_SPOT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Composit Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SAP_OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_COMP_ENH_SPOT_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Composite"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
*  DATA s_comp         TYPE zaplink_ensc_data=&gt;ts_fm_data.
*  DATA version        TYPE r3state.
**  DATA short_id       TYPE sotr_conc.
**  DATA long_id        TYPE sotr_conc.
*  DATA o_enh          TYPE to_enh_spot_sap.
*  DATA o_comp         TYPE to_comp_enh_spot_sap.
*  FIELD-SYMBOLS:
*    &lt;enh&gt;   LIKE LINE OF raw_object-&gt;enhancements,
*    &lt;comp&gt;  LIKE LINE OF raw_object-&gt;composit_enhancements.
*
*  ASSERT sap_object IS BOUND.
*  CREATE OBJECT raw_object.
*  version = get_version( sap_object ).
*  s_comp-header = sap_object-&gt;get_enhspotcomphead( version ).
**  short_id = s_comp-header-shorttextid.
**  long_id = s_comp-header-docuid.
**  CLEAR: s_comp-header-shorttextid, s_comp-header-docuid.
*  s_comp-comp_enh = sap_object-&gt;if_enh_spot_composite~get_composite_childs( version ).
*  s_comp-enh = sap_object-&gt;if_enh_spot_composite~get_enh_spot_childs( version ).
*  raw_object-&gt;from_data( s_comp ).
*
*  IF sub_components = abap_true.
*    LOOP AT raw_object-&gt;enhancements ASSIGNING &lt;enh&gt;.
*      o_enh = _load_enh_spot( &lt;enh&gt;-name ).
*      CREATE OBJECT &lt;enh&gt;-zl_object.
*      &lt;enh&gt;-zl_object-&gt;raw = convert_enh_spot( sap_object = o_enh
*                                           sub_components = sub_components
*                                          components_list = components_list ).
*      IF &lt;enh&gt;-zl_object IS BOUND.      CLEAR &lt;enh&gt;-name.       ENDIF.
*    ENDLOOP.
*
*    LOOP AT raw_object-&gt;composit_enhancements ASSIGNING &lt;comp&gt;.
*      o_comp = _load_comp_enh_spot( &lt;comp&gt;-name ).
*      CREATE OBJECT &lt;comp&gt;-zl_object.
*      &lt;comp&gt;-zl_object-&gt;raw = convert_comp_enh_spot( sap_object = o_comp
*                                                 sub_components = sub_components
*                                                components_list = components_list ).
*      IF &lt;comp&gt;-zl_object IS BOUND.      CLEAR &lt;comp&gt;-name.       ENDIF.
*    ENDLOOP.
*  ENDIF.
*  CLEAR raw_object-&gt;a0_maindata-enhspotcomposite.
*</SOURCE>
   </ITEM>
   <ITEM CMPNAME="REVERSE_ENH_IMPL" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Convert Enhancement Implementation RAW data to SAP object"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENTS_LIST" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_LIST"/>
     <ITEM SCONAME="OFF_SUB_COMPONENTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_WITH_SUBCOMP" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Composite Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RAW_OBJECT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_ENH_IMPL">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Enhancement Implementation"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SAP_OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ENH_IMPL_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Tool Redefinition BAdI"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
*  DATA s_comp         TYPE zaplink_enho_data=&gt;ts_fm_data.
*  DATA version        TYPE r3state.
*  Data name           TYPE ENHNAME.
*
*  ASSERT sap_object IS BOUND.
*  CREATE OBJECT raw_object.
*  version = get_version( sap_object ).
*  name = s_comp-header-spot_name = sap_object-&gt;get_spot_name( version ).
*  s_comp-impl_data = sap_object-&gt;get_implementations( version ).
** From : Module STATUS_0100 in SAPLENHANCEMENT_EDITOR
*  s_comp-header-composite = cl_enh_factory=&gt;enh_find_parent_composite( name ) .
** From : FORM lesen_sfw in SAPLENHANCEMENT_EDITOR
**  l_wa_swf-objecttype = &apos;ENHO&apos;.
**  l_wa_swf-objectname = i_objekt.
**
**  APPEND l_wa_swf TO l_it_swf.
**
**  CALL FUNCTION &apos;SFW_GET_SWITCHPOS&apos;
**    EXPORTING
**      provide_text = &apos;X&apos;
**    TABLES
**      switchtab    = l_it_swf.
**
**  SORT l_it_swf BY objecttype
**                   objectname.
**
**  READ TABLE l_it_swf WITH KEY objecttype = g_object_type    &quot;&apos;ENHO&apos;
**                               objectname = enh_edt_layout-object1
**                      INTO l_wa_swf BINARY SEARCH.
**
**  IF sy-subrc = 0.
**    MOVE :
**       l_wa_swf-state        TO p_switch_pos,
**       l_wa_swf-text         TO p_switch_text,
**       l_wa_swf-switch_id    TO p_switch_id.
**  ENDIF.
*
** IF_ENH_PERSIST~LOAD_LOGS =&gt; Creation date
*
*  raw_object-&gt;from_data( s_comp ).
*
**  IF sub_components = abap_true.
**  ENDIF.
*  CLEAR raw_object-&gt;a0_maindata-composite.
*</SOURCE>
   </ITEM>
   <ITEM CMPNAME="REVERSE_ENH_SPOT" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Convert Enhancement Spot RAW data to SAP object"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENTS_LIST" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_LIST"/>
     <ITEM SCONAME="OFF_SUB_COMPONENTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_WITH_SUBCOMP" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="OFF Composite Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RAW_OBJECT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_ENH_SPOT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Data for Composit Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SAP_OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ENH_SPOT_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Tool BAdI"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA s_comp         TYPE zaplink_enhs_data=&gt;ts_fm_data.
  DATA o_gen          TYPE REF TO if_enh_spot_tool.
  FIELD-SYMBOLS: &lt;b&gt; LIKE LINE OF s_comp-def_data.

  ASSERT raw_object IS BOUND.
  s_comp = raw_object-&gt;to_data( ).
  cl_enh_factory=&gt;create_enhancement_spot( EXPORTING spot_name = s_comp-header-enhspotcomposite
                                                      tooltype = cl_enh_tool_badi_def=&gt;tooltype
                                                          dark = abap_true
                                           IMPORTING spot = o_gen ).
  sap_object ?= o_gen.
  LOOP AT s_comp-def_data ASSIGNING &lt;b&gt;.
    sap_object-&gt;add_badi_def( &lt;b&gt; ).
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="REVERSE_RAW" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Convert Enhancement RAW data to SAP object"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMPONENTS_LIST" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_LIST"/>
     <ITEM SCONAME="NAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMPNAME">
      <TEXTS>
       <ITEM LANG="E" TEXT="Component name"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OFF_SUB_COMPONENTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_WITH_SUBCOMP" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="OFF Composite Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RAW_OBJECT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_RAW_DATA"/>
     <ITEM SCONAME="SAP_OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ENHANCEMENT_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="General Methods for Enhancement Objects"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA o_ces      TYPE to_comp_enh_spot.
  DATA o_es       TYPE to_enh_spot.
  DATA o_cei      TYPE to_comp_enh_impl.
  DATA o_ei       TYPE to_enh_impl.

* Composit Enhancement Spot
  TRY.
      o_ces ?= raw_object.
      sap_object = reverse_comp_enh_spot( raw_object = o_ces
*                                      sub_components = sub_components
                                     components_list = components_list ).
    CATCH cx_sy_move_cast_error.    &quot; Wrong Type
  ENDTRY.
  CHECK sap_object IS NOT BOUND.

* Enhancement Spot
  TRY.
      o_es ?= raw_object.
      o_es-&gt;a0_maindata-enhspotcomposite = name.
      sap_object = reverse_enh_spot( raw_object = o_es
*                                 sub_components = sub_components
                                components_list = components_list ).
    CATCH cx_sy_move_cast_error.    &quot; Wrong Type
  ENDTRY.
  CHECK sap_object IS NOT BOUND.

* Composit Enhancement Implementation
  TRY.
      o_cei ?= raw_object.
      sap_object = reverse_comp_enh_impl( raw_object = o_cei
*                                      sub_components = sub_components
                                     components_list = components_list ).
    CATCH cx_sy_move_cast_error.    &quot; Wrong Type
  ENDTRY.
  CHECK sap_object IS NOT BOUND.

* Enhancement Implementation
  TRY.
      o_ei ?= raw_object.
      sap_object = reverse_enh_impl( raw_object = o_ei
*                                 sub_components = sub_components
                                components_list = components_list ).
    CATCH cx_sy_move_cast_error.    &quot; Wrong Type
  ENDTRY.
  ASSERT raw_object IS BOUND.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_LOAD_COMP_ENH_IMPL" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Load Composit Enhancement Implementation as SAP object (w n)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="NAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMP_ENH_IMPL_NAME">
      <TEXTS>
       <ITEM LANG="E" TEXT="ID of a Composite Enhancement Implementation"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_COMP_ENH_IMPL_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Composite"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  TRY.
      object ?= cl_enh_factory=&gt;load_enhancement_composite( name = name
                                                            lock = abap_false
                                                        run_dark = abap_true ).
    CATCH cx_enh_io_error.              &quot; Do not exists =&gt; Object is null
*    CATCH cx_enh_is_locked .           &quot; Should not happend =&gt; leave exception
*    CATCH cx_enh_permission_denied .
*    CATCH cx_enh_canceled .
*    CATCH cx_enh_internal_error .
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_LOAD_COMP_ENH_SPOT" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Load Composit Enhancement Spot as SAP object (from name)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="NAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMP_ENH_SPOT_NAME">
      <TEXTS>
       <ITEM LANG="E" TEXT="Composite Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_COMP_ENH_SPOT_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Composite"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  TRY.
      object ?= cl_enh_factory=&gt;load_enhancement_spot_comp( name = name
                                                            lock = abap_false
                                                        run_dark = abap_true ).
    CATCH cx_enh_io_error.              &quot; Do not exists =&gt; Object is null
*    CATCH cx_enh_is_locked .           &quot; Should not happend =&gt; leave exception
*    CATCH cx_enh_permission_denied .
*    CATCH cx_enh_canceled .
*    CATCH cx_enh_internal_error .
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_LOAD_ENH_IMPL" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Load Enhancement Implementation as SAP object (from name)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="NAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_ENH_IMPL_NAME">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Implementation"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ENH_IMPL_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Tool Redefinition BAdI"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  TRY.
      object ?= cl_enh_factory=&gt;get_enhancement( enhancement_id = name
                                                           lock = abap_false
                                                       run_dark = abap_true ).
    CATCH cx_enh_io_error.              &quot; Do not exists =&gt; Object is null
*    CATCH cx_enh_is_locked .           &quot; Should not happend =&gt; leave exception
*    CATCH cx_enh_permission_denied .
*    CATCH cx_enh_canceled .
*    CATCH cx_enh_internal_error .
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_LOAD_ENH_SPOT" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Load Enhancement Spot as SAP object (from name)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="NAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMP_ENH_SPOT_NAME">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Spot"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ENH_SPOT_SAP">
      <TEXTS>
       <ITEM LANG="E" TEXT="Enhancement Tool BAdI"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  TRY.
      object ?= cl_enh_factory=&gt;get_enhancement_spot( spot_name = name
                                                           lock = abap_false
                                                       run_dark = abap_true ).
    CATCH cx_enh_io_error.              &quot; Do not exists =&gt; Object is null
*    CATCH cx_enh_is_locked .           &quot; Should not happend =&gt; leave exception
*    CATCH cx_enh_permission_denied .
*    CATCH cx_enh_canceled .
*    CATCH cx_enh_internal_error .
  ENDTRY.</SOURCE>
   </ITEM>
  </METHODS>
  <REDEFINITIONS>
   <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" MTDNAME="ZAPLINK_CONNECTOR~CREATE_NEW_RAW">
    <SOURCE>`
  DATA o_conn   TYPE to_connector.
  DATA o_ces    TYPE to_comp_enh_spot.
  DATA o_es     TYPE to_enh_spot.
  DATA o_ei     TYPE to_enh_impl.
  DATA o_cei    TYPE to_comp_enh_impl.

  CREATE OBJECT object.
  CASE type.
    WHEN st_enh_spot.
      CREATE OBJECT o_es.
      object-&gt;raw = o_es.
    WHEN st_comp_enh_spot.
      CREATE OBJECT o_ces.
      object-&gt;raw = o_ces.
    WHEN st_enh_impl.
      CREATE OBJECT o_ei.
      object-&gt;raw = o_ei.
    WHEN st_comp_enh_impl.
      CREATE OBJECT o_cei.
      object-&gt;raw = o_cei.
    WHEN OTHERS.
      CLEAR object.
      mac_raise_type_not_supported me-&gt;class_name type.
  ENDCASE.</SOURCE>
   </ITEM>
   <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" MTDNAME="ZAPLINK_CONNECTOR~DELETE_FROM_SAP">
    <SOURCE>`
  DATA o_enh          TYPE to_enhancement_sap.
  DATA o_root         TYPE REF TO cx_root.

  o_enh = load_enhancement( component ).
  TRY.
      o_enh-&gt;delete( run_dark = abap_true ).
      result = abap_true.
*cx_enh_mod_not_allowed
*cx_enh_permission_denied
*cx_enh_canceled
*cx_enh_internal_error
*cx_enh_is_locked
*cx_enh_io_error
*cx_enh_composite_not_empty
    CATCH cx_root INTO o_root.
      mac_cascade_raise o_mycx o_root.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" MTDNAME="ZAPLINK_CONNECTOR~DO_EXISTS">
    <SOURCE>`
  DATA d_type         TYPE td_comptype.
  DATA o_enh          TYPE to_enhancement_sap.

  exists = me-&gt;exists-not_exists.
  o_enh = load_enhancement( component ).
  IF o_enh IS BOUND.
    exists = me-&gt;exists-exists.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" MTDNAME="ZAPLINK_CONNECTOR~IS_SUPPORTED_VERSION">
    <SOURCE>`
  result = abap_false.
  if version = _ver.    result = abap_true.   endif.</SOURCE>
   </ITEM>
   <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" MTDNAME="ZAPLINK_CONNECTOR~READ_FROM_SAP">
    <SOURCE>`
  DATA f_subcomp  TYPE td_with_subcomp.
  DATA o_list     TYPE to_list.
  DATA o_sap_intf TYPE to_enhancement_sap.

  CREATE OBJECT object.
  object-&gt;set_component( component ).

  TRY.
    o_sap_intf = load_enhancement( component ).
    ASSERT o_sap_intf is bound.

    f_subcomp = component-&gt;get_with_subcomp( ).
    CREATE OBJECT o_list.
    component-&gt;set_subcomponents( o_list ).

    object-&gt;raw = convert_enhancement( sap_object = o_sap_intf
                                   sub_components = f_subcomp
                                  components_list = o_list ).

    TRY.
        o_list-&gt;remove( component ).
      CATCH zaplink_cx_list.
    ENDTRY.

    object-&gt;update_connector_data( me ).
    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" MTDNAME="ZAPLINK_CONNECTOR~WRITE_TO_SAP">
    <SOURCE>`
  DATA o_sap_intf TYPE to_enhancement_sap.

  TRY.
    ASSERT object-&gt;raw IS BOUND.
    CREATE OBJECT components.
    o_sap_intf = reverse_raw( raw_object = object-&gt;raw
                                    name = object-&gt;name
*                          sub_components = f_subcomp
                         components_list = components ).
    o_sap_intf-&gt;save( ).
    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
   </ITEM>
  </REDEFINITIONS>
  <TYPEGROUPS>
   <ITEM TYPEGROUP="SEEX" EXPLICIT="X"/>
  </TYPEGROUPS>
  <TYPES>
   <ITEM CMPNAME="TD_COMP_ENH_IMPL_NAME" STATE="1" EDITORDER="3 " TYPTYPE="1" TYPE="ENHCOMPOSITENAME">
    <TEXTS>
     <ITEM LANG="E" TEXT="ID of a Composite Enhancement Implementation"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_COMP_ENH_SPOT_NAME" STATE="1" EDITORDER="1 " TYPTYPE="1" TYPE="ENHSPOTCOMPOSITENAME">
    <TEXTS>
     <ITEM LANG="E" TEXT="Composite Enhancement Spot"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_ENH_IMPL_NAME" STATE="1" EDITORDER="2 " TYPTYPE="1" TYPE="ENHNAME">
    <TEXTS>
     <ITEM LANG="E" TEXT="ID of an Enhancement"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_ENH_SPOT_NAME" STATE="1" EDITORDER="4 " TYPTYPE="1" TYPE="ENHSPOTNAME">
    <TEXTS>
     <ITEM LANG="E" TEXT="Name (ID) of an Enhancement Spot"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_COMP_ENH_IMPL" STATE="1" EDITORDER="12 " TYPTYPE="3" TYPE="ZAPLINK_ENHC_DATA">
    <TEXTS>
     <ITEM LANG="E" TEXT="Data for Composit Enhancement Implementation"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_COMP_ENH_IMPL_SAP" STATE="1" EDITORDER="13 " TYPTYPE="3" TYPE="CL_ENH_COMPOSITE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Enhancement Composite"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_COMP_ENH_SPOT" STATE="1" EDITORDER="5 " TYPTYPE="3" TYPE="ZAPLINK_ENSC_DATA">
    <TEXTS>
     <ITEM LANG="E" TEXT="Data for Composit Enhancement Spot"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_COMP_ENH_SPOT_SAP" STATE="1" EDITORDER="6 " TYPTYPE="3" TYPE="CL_ENH_SPOT_COMPOSITE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Enhancement Composite"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_ENHANCEMENT_SAP" STATE="1" EDITORDER="11 " TYPTYPE="3" TYPE="IF_ENH_OBJECT">
    <TEXTS>
     <ITEM LANG="E" TEXT="General Methods for Enhancement Objects"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_ENH_IMPL" STATE="1" EDITORDER="9 " TYPTYPE="3" TYPE="ZAPLINK_ENHO_DATA">
    <TEXTS>
     <ITEM LANG="E" TEXT="Data for Enhancement Implementation"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_ENH_IMPL_SAP" STATE="1" EDITORDER="10 " TYPTYPE="3" TYPE="CL_ENH_TOOL_BADI_IMPL">
    <TEXTS>
     <ITEM LANG="E" TEXT="Enhancement Tool Redefinition BAdI"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_ENH_SPOT" STATE="1" EDITORDER="7 " TYPTYPE="3" TYPE="ZAPLINK_ENHS_DATA">
    <TEXTS>
     <ITEM LANG="E" TEXT="Data for Enhancement Spot"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_ENH_SPOT_SAP" STATE="1" EDITORDER="8 " TYPTYPE="3" TYPE="CL_ENH_TOOL_BADI_DEF">
    <TEXTS>
     <ITEM LANG="E" TEXT="Enhancement Tool BAdI"/>
    </TEXTS>
   </ITEM>
  </TYPES>
 </RAW>
</ZL_OBJECT>
