<?xml version="1.0" encoding="utf-16"?>
<ZL_OBJECT CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_LIST" TYPE="CLAS">
 <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-FRAMEWORK-CORE" MASTERLANG="E"/>
 <RAW>
  <A0_MAINDATA VERSION="1" LANGU="E" UUID="16F9034B756EB95AE1000000AC120173" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20091104" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
   <INHERITANCE REFCLSNAME="ZAPLINK_LIST_" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20091118"/>
   <TEXTS>
    <ITEM LANGU="E" DESCRIPT="ZapLink Components list"/>
   </TEXTS>
  </A0_MAINDATA>
  <ALIASES>
   <ITEM CMPNAME="TD_COMPNAME" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_COMPNAME">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_COMPTYPE" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_COMPTYPE">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_LIGHT" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_LIGHT">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_SEL_ACTION" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_SEL_ACTION">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_COMPKEY" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TS_COMPKEY">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_COMPKEYS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_COMPKEYS">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
  </ALIASES>
  <ATTRIBUTS>
   <ITEM CMPNAME="ALV_CONF" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20091118" ATTDECLTYP="1" TYPTYPE="1" TYPE="TS_ALV_CONF" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ALV configuration"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="DISPLAY_PROGRESS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="1" TYPE="ABAP_BOOL" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Display SAPGUI progress indication while iterating"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="ITERATOR_TYPES" VERSION="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" ATTDECLTYP="2" TYPTYPE="4" SRCROW1="9 " SRCCOLUMN1="4 " SRCROW2="12 " SRCCOLUMN2="24 " R3RELEASE="700" TYPESRC_LENG="153 " TYPESRC="begin of ITERATOR_TYPEs,
      all       type Td_ITERATOR_TYPE value &apos;A&apos;,
      selected  type Td_ITERATOR_TYPE value &apos;S&apos;,
    end of ITERATOR_TYPEs
">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Types of Iterator"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="LIGHTS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" ATTDECLTYP="2" TYPTYPE="4" SRCROW1="49 " SRCCOLUMN1="4 " SRCROW2="54 " SRCCOLUMN2="16 " R3RELEASE="700" TYPESRC_LENG="250 " TYPESRC="BEGIN OF lights,
      no       TYPE td_light VALUE ICON_LIGHT_OUT,
      red      TYPE td_light VALUE ICON_RED_LIGHT,
      yellow   TYPE td_light VALUE ICON_YELLOW_LIGHT,
      green    TYPE td_light VALUE ICON_GREEN_LIGHT,
    END OF lights
">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Lights icons"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="O_EXCEPTION" VERSION="1" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="1" TYPE="TO_EXCEPTION" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Component"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="SEL_ACTIONS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" ATTDECLTYP="2" TYPTYPE="4" SRCROW1="24 " SRCCOLUMN1="4 " SRCROW2="28 " SRCCOLUMN2="21 " R3RELEASE="700" TYPESRC_LENG="188 " TYPESRC="BEGIN OF sel_actions,
      export    TYPE td_sel_action VALUE &apos;E&apos;,
      import    TYPE td_sel_action VALUE &apos;I&apos;,
      uninstall TYPE td_sel_action VALUE &apos;U&apos;,
    END OF sel_actions
">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Selction actions"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_ALLCOMP" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="1" TYPE="TT_ALLCOMPLIST" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="All Component list index"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_IDX_COUNT" VERSION="1" STATE="1" EDITORDER="9 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="1" TYPE="SY-TABIX" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Index of Internal Tables"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_INDEX" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="1" TYPE="TT_COMPLIST" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Component list index"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_ITERATOR_END" VERSION="1" STATE="1" EDITORDER="10 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="1" TYPE="ABAP_BOOL" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_ITERATOR_PREV" VERSION="1" STATE="1" EDITORDER="11 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="1" TYPE="TO_COMPONENT" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_ITERATOR_TABIX" VERSION="1" STATE="1" EDITORDER="12 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="1" TYPE="SY-TABIX" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Index of Internal Tables"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_ITERATOR_TYPE" VERSION="1" STATE="1" EDITORDER="13 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="1" TYPE="TD_ITERATOR_TYPE" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Iterator type : all, selected, ...."/>
    </TEXTS>
   </ITEM>
  </ATTRIBUTS>
  <INTERFACES>
   <ITEM REFCLSNAME="ZAPLINK_DATATYPES" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20091118" RELTYPE="1"/>
  </INTERFACES>
  <LOCAL>
   <TYPES>*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE</TYPES>
   <IMPLEMENTATIONS>*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
   <MACROS>*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
  </LOCAL>
  <METHODS>
   <ITEM CMPNAME="ADD" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Add component to list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMP" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>DATA _idx  LIKE LINE OF _index.
  DATA _comp LIKE LINE OF _allcomp.

  _idx = search_index( comp ).
  IF _idx-o_comp IS BOUND.
* Component &apos;&amp;name&amp;&apos; (&amp;type&amp;) already in the collection
    RAISE EXCEPTION TYPE zaplink_cx_list
               EXPORTING textid = zaplink_cx_list=&gt;already_exists
                           type = _idx-key-type
                           name = _idx-key-name.
  ENDIF.

  _idx-o_comp = comp.
  INSERT _idx INTO TABLE _index.
  MOVE-CORRESPONDING _idx TO _comp. INSERT _comp INTO TABLE _allcomp.
  _add_subcomp( comp ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="ADD_KEYS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Add&amp;Create components from a key list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_COMPKEYS">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Raw list of Components Keys"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>DATA o_comp   TYPE to_component.
  DATA _cx      TYPE REF TO zaplink_cx_list.
  DATA _cx_comp TYPE REF TO zaplink_cx_component.
  DATA _list    TYPE tt_compkeys.
  FIELD-SYMBOLS:
    &lt;k&gt; LIKE LINE OF _list.

  TRY.
      _list = data.
      SORT _list.
      DELETE ADJACENT DUPLICATES FROM _list.
      DELETE _list WHERE table_line IS INITIAL.

      LOOP AT _list ASSIGNING &lt;k&gt;.
        TRY.
            o_comp = zaplink_component=&gt;create_new( &lt;k&gt; ).
          CATCH zaplink_cx_component INTO _cx_comp.
* Action failed due to exception &apos;&amp;CX_NAME&amp;&apos;
            CREATE OBJECT _cx
              EXPORTING
                textid  = zaplink_cx_list=&gt;failed
                prev_cx = _cx_comp.
            _cx-&gt;update( ).
            RAISE EXCEPTION _cx.
        ENDTRY.
        add( o_comp ).
      ENDLOOP.
    CATCH zaplink_cx_list INTO _cx.
      RAISE EXCEPTION _cx.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="ADD_LIST" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Merge new components from a list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_ME">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZapLink Components list"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>DATA t_allcomp   TYPE	tt_allcomplist.
  FIELD-SYMBOLS:
    &lt;i&gt; LIKE LINE OF _index.

  LOOP AT data-&gt;_index ASSIGNING &lt;i&gt;.
    READ TABLE _index TRANSPORTING NO FIELDS
               WITH TABLE KEY key = &lt;i&gt;-key.
    IF sy-subrc = 0.
* Already exist here
      CONTINUE.
    ENDIF.
    t_allcomp = data-&gt;_allcomp.
    DELETE t_allcomp WHERE o_comp &lt;&gt; &lt;i&gt;-o_comp.
    INSERT &lt;i&gt; INTO TABLE _index.
    INSERT LINES OF t_allcomp INTO TABLE _allcomp.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CHANGE_SELECTION" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Change selection list"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>DATA alv TYPE tt_alv.

  alv = conv_to_alv( ).

  CALL FUNCTION &apos;REUSE_ALV_GRID_DISPLAY&apos;
    EXPORTING
*      i_callback_program       = &apos;ZSAPLINK&apos;
*      i_callback_pf_status_set = &apos;PF_STATUS_SET&apos;
*      i_callback_user_command  = &apos;USER_COMMAND_USER&apos;
      i_grid_title             = &apos;Select objects&apos;(lst)
      it_fieldcat              = alv_conf-fields
      is_layout                = alv_conf-layout
    TABLES
      t_outtab                 = alv
    EXCEPTIONS
      OTHERS                   = 0.

  update_from_alv( alv ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDTYPE="2" MTDDECLTYP="1" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="CLASS_CONSTRUCTOR"/>
    </TEXTS>
    <SOURCE>DATA field     LIKE LINE OF alv_conf-fields.
  DATA t_desc    TYPE REF TO cl_abap_typedescr.
  DATA st_desc   TYPE REF TO cl_abap_structdescr.
  DATA list      TYPE tt_alv.
  DATA line      LIKE LINE OF list.
  DATA text_name TYPE string.
  FIELD-SYMBOLS:
    &lt;t&gt; TYPE ANY,
    &lt;c&gt; LIKE LINE OF st_desc-&gt;components.

*==============================================
*==========     ALV     =======================
*==============================================

  t_desc = cl_abap_structdescr=&gt;describe_by_data( line ).

  CHECK t_desc-&gt;kind = cl_abap_structdescr=&gt;kind_struct.
  st_desc ?= t_desc.

  LOOP AT st_desc-&gt;components ASSIGNING &lt;c&gt;.
    CLEAR field.

    field-fieldname = &lt;c&gt;-name.
    text_name = sy-tabix.
    CONDENSE text_name NO-GAPS.
    CONCATENATE &apos;TEXT-NF&apos; text_name INTO text_name.
    ASSIGN (text_name) TO &lt;t&gt;.
    IF sy-subrc = 0.
      field-seltext_l = &lt;t&gt;.
    ELSE.
      field-seltext_l = field-fieldname.
    ENDIF.
    APPEND field TO alv_conf-fields.
  ENDLOOP.

  alv_conf-layout-box_fieldname     = &apos;SELECT&apos;.
  alv_conf-layout-f2code            = &apos;MYPICK&apos; .
  alv_conf-layout-colwidth_optimize = &apos;X&apos;.
*  alv_conf-layout-lights_fieldname  = &apos;STATUS&apos;.

  DELETE alv_conf-fields WHERE fieldname = alv_conf-layout-box_fieldname.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CLEAR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Clear component list"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>CLEAR:
    DISPLAY_PROGRESS,
    _ALLCOMP,
    _INDEX,
    O_EXCEPTION,
    _IDX_COUNT,
    _ITERATOR_END,
    _ITERATOR_PREV,
    _ITERATOR_TABIX,
    _ITERATOR_TYPE.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CLONE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Clone (copy) component to list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_ME">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZapLink Components list"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>DATA o_comp TYPE to_component.
  FIELD-SYMBOLS:
    &lt;i&gt; LIKE LINE OF _index.

  TRY.
      CREATE OBJECT result.

      LOOP AT _index ASSIGNING &lt;i&gt;.
        o_comp = &lt;i&gt;-o_comp-&gt;clone( ).
        result-&gt;add( o_comp ).
      ENDLOOP.
    CATCH zaplink_cx.
      CLEAR result.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONV_TO_ALV" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Create ALV table from collection"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARDECLTYP="3" TYPTYPE="1" TYPE="TT_ALV">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ALV table"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  FIELD-SYMBOLS:
    &lt;i&gt; LIKE LINE OF _index.
  DATA _key TYPE ts_compkey.
  DATA _line LIKE LINE OF result.

  LOOP AT _index ASSIGNING &lt;i&gt;.
    CLEAR _line.
    _line-select = &lt;i&gt;-selected.
    _key = &lt;i&gt;-o_comp-&gt;_get_key( ).
    _line-type = _key-type.
    _line-name = _key-name.

    _line-typ_txt = ZAPLINK_CONNECTORS=&gt;TYPE2TEXT( _line-type ).

    IF &lt;i&gt;-o_comp-&gt;_connector-exists = zaplink_component=&gt;connexists-not_exists.
      _line-plugin = lights-red.
      _line-status = lights-no.
* There is no ZAP Link connector installed for object type &apos;&amp;1&apos;
      MESSAGE e000(zaplink_gui) WITH _line-type INTO _line-msg.
    ELSE.
      _line-plugin = lights-green.

      IF &lt;i&gt;-o_comp-&gt;_exists = zaplink_connector=&gt;exists.
        SELECT SINGLE devclass srcsystem
          INTO (_line-devclass, _line-srcsystem)
          FROM tadir
          WHERE   object = _line-type
            AND obj_name = _line-name.
        CASE &lt;i&gt;-selected.
          WHEN abap_true.
            _line-status = lights-green.
          WHEN abap_false.
            _line-status = lights-yellow.
            CLEAR _line-select.
* Object &apos;&amp;2&apos; (&amp;1) already exists. Select it to overwrite
            MESSAGE e001(zaplink_gui) WITH _line-type _line-name INTO _line-msg.
        ENDCASE.
      ELSE.   &quot; Not Exists
        CASE &lt;i&gt;-selected.
          WHEN abap_false.
            _line-status = lights-red.
* Object &apos;&amp;2&apos; (&amp;1) does not exists.
            MESSAGE e003(zaplink_gui) WITH _line-type _line-name INTO _line-msg.
          WHEN abap_true.
            _line-status = lights-green.
        ENDCASE.
      ENDIF.
    ENDIF.

    APPEND _line TO result.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_COUNT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Iterator Get number of occurence"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARDECLTYP="3" TYPTYPE="1" TYPE="I">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Occurence count"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>CASE _iterator_type.
    WHEN iterator_types-selected.
      LOOP AT _index TRANSPORTING NO FIELDS
              WHERE selected = abap_true.
        ADD 1 TO result.
      ENDLOOP.
    WHEN iterator_types-all.
      result = LINES( _index ).
    WHEN OTHERS.
* GET_NEXT has been called without initialize a iterator.
      RAISE EXCEPTION TYPE zaplink_cx_list
                 EXPORTING textid = zaplink_cx_list=&gt;iterator_not_initialize.
  ENDCASE.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_NEXT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="9 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Iterator Get next"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>DATA component TYPE ts_compkey.
  DATA msg       TYPE string.
  DATA _pos      TYPE i.
  DATA _cx       TYPE REF TO zaplink_cx_list.
  DATA _key TYPE ts_compkey.
  FIELD-SYMBOLS:
    &lt;i&gt; LIKE LINE OF _index.

  CHECK _iterator_end = abap_false.

  TRY.
      READ TABLE _index TRANSPORTING NO FIELDS
           WITH KEY o_comp = _iterator_prev.
      IF sy-subrc = 0.
        _iterator_tabix = sy-tabix + 1.  &quot; in case insert occurs during 2 get_next.
      ELSEIF _iterator_prev IS BOUND.
        _key = _iterator_prev-&gt;_get_key( ).
        READ TABLE _index TRANSPORTING NO FIELDS
             WITH TABLE KEY key = _key.
        IF sy-subrc = 0.
          _iterator_tabix = sy-tabix + 1.  &quot; in case delete &amp; insert occurs during 2 get_next.
        ELSE.
          _iterator_tabix = sy-tabix.  &quot; in case delete occurs during 2 get_next.
        ENDIF.
      ENDIF.
      CASE _iterator_type.
        WHEN iterator_types-selected.
          LOOP AT _index ASSIGNING &lt;i&gt; FROM _iterator_tabix
                  WHERE selected = abap_true.
            _iterator_tabix = sy-tabix + 1.
            EXIT.
          ENDLOOP.
        WHEN iterator_types-all.
          LOOP AT _index ASSIGNING &lt;i&gt; FROM _iterator_tabix.
            _iterator_tabix = sy-tabix + 1.
            EXIT.
          ENDLOOP.
        WHEN OTHERS.
* GET_NEXT has been called without initialize a iterator.
          RAISE EXCEPTION TYPE zaplink_cx_list
                     EXPORTING textid = zaplink_cx_list=&gt;iterator_not_initialize.
      ENDCASE.
      IF sy-subrc &lt;&gt; 0.
        _iterator_end = abap_true.
        EXIT.
      ENDIF.
      IF NOT &lt;i&gt;-o_comp IS BOUND.
        CLEAR _iterator_prev.
        result = get_next( ).
        EXIT.
      ENDIF.

      result = _iterator_prev = &lt;i&gt;-o_comp.

* Display progression
      IF display_progress = abap_true.
        component = result-&gt;_get_key( ).
        IF sy-batch = abap_true.
* Processing object : &amp;2 (&amp;1)
          MESSAGE i000(zaplink_list) WITH component-type component-name.
        ELSE.
* Processing object : &amp;2 (&amp;1)
          MESSAGE i000(zaplink_list) WITH component-type component-name INTO msg.
          IF _idx_count &gt; 0.
            _pos = _iterator_tabix / _idx_count.
          ELSE.
            _pos = _iterator_tabix.
          ENDIF.
          CALL FUNCTION &apos;SAPGUI_PROGRESS_INDICATOR&apos;
            EXPORTING
              percentage = _pos
              text       = msg.
        ENDIF.
      ENDIF.
    CATCH zaplink_cx_list INTO _cx.
      RAISE EXCEPTION _cx.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="INIT_ITER" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="10 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Initialize Iterator on all component of the list"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>CLEAR: _iterator_tabix, _iterator_prev.
  _iterator_type = iterator_types-all.
  _idx_count = get_count( ).
  _iterator_end = abap_false.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="INIT_SEL_ITER" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="11 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Initialize Iterator on selected component"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>CLEAR: _iterator_tabix, _iterator_prev.
  _iterator_type = iterator_types-selected.
  _idx_count = get_count( ).
  _iterator_end = abap_false.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="IS_INCLUDED" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="17 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Search components into all component list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="LIST" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_ME">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZapLink Components list"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARDECLTYP="3" TYPTYPE="1" TYPE="ABAP_BOOL">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>DATA t_allcomp TYPE tt_allcomplist.
  FIELD-SYMBOLS:
    &lt;c&gt; LIKE LINE OF _allcomp.

  t_allcomp = list-&gt;_allcomp.

  DELETE ADJACENT DUPLICATES FROM t_allcomp COMPARING key.

  result = abap_true.
  LOOP AT t_allcomp ASSIGNING &lt;c&gt;.
    READ TABLE _allcomp TRANSPORTING NO FIELDS
         WITH TABLE KEY key = &lt;c&gt;-key.
    IF sy-subrc &lt;&gt; 0.
      result = abap_false.
      EXIT.
    ENDIF.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="IS_SELECTED" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="16 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Is this component selected ?"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMP" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARDECLTYP="3" TYPTYPE="1" TYPE="ABAP_BOOL">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  DATA _idx LIKE LINE OF _index.

  _idx = search_index( comp ).
  IF _idx-selected IS NOT INITIAL.
    result = abap_true.
  ELSE.
    result = abap_false.
  ENDIF.
</SOURCE>
   </ITEM>
   <ITEM CMPNAME="KEEP_COMMUN_LIST" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="12 " AUTHOR="TBENSIAL" CREATEDON="20091118" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Keep only component in commun with an other list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_ME">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZapLink Components list"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>FIELD-SYMBOLS:
    &lt;i&gt; LIKE LINE OF _index.

  LOOP AT _index ASSIGNING &lt;i&gt;.
    READ TABLE data-&gt;_index TRANSPORTING NO FIELDS
               WITH TABLE KEY key = &lt;i&gt;-key.
    IF sy-subrc &lt;&gt; 0.
      DELETE _index FROM &lt;i&gt;.
    ENDIF.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="REMOVE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="13 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="TODO====== Remove component from list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMP" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>DATA _idx LIKE LINE OF _index.

  TRY.
      _idx = search_index( comp ).
    CATCH zaplink_cx_list INTO o_exception.
      RAISE EXCEPTION o_exception.
  ENDTRY.

  DELETE _allcomp WHERE o_comp = _idx-o_comp.
  DELETE TABLE _index FROM _idx.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="REMOVE_LIST" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="14 " AUTHOR="TBENSIAL" CREATEDON="20091118" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Remove component to list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_ME">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZapLink Components list"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" DESCRIPT="ZAPlink Exception for Component" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Component"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>FIELD-SYMBOLS:
    &lt;i&gt; LIKE LINE OF _index.

  LOOP AT data-&gt;_index ASSIGNING &lt;i&gt;.
    TRY.
        remove( &lt;i&gt;-o_comp ).
      CATCH zaplink_cx_list INTO o_exception.
    ENDTRY.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SEARCH" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="18 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Search component into list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMP" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  DATA _idx LIKE LINE OF _index.

  _idx = search_index( comp ).
  IF NOT _idx-o_comp IS BOUND.
* not a real exception.
* Component &apos;&amp;NAME&amp;&apos; (&amp;TYPE&amp;) not found in the collection
*    RAISE EXCEPTION TYPE zaplink_cx_list
*               EXPORTING textid = zaplink_cx_list=&gt;not_found
*                           type = _idx-key-type
*                           name = _idx-key-name.
    exit.
  ENDIF.

  result = _idx-o_comp.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SEARCH_INDEX" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Search component into list &amp; get index"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMP" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_COMPLIST">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Component list index"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>DATA _key TYPE ts_compkey.

  _key = comp-&gt;_get_key( ).

  READ TABLE _index INTO result
             WITH TABLE KEY key = _key.
  IF sy-subrc &lt;&gt; 0.
    result-key = _key.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SELECT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="15 " AUTHOR="TBENSIAL" CREATEDON="20091119" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Select the component"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMP" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091119" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091119">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  TRY.
      _select( comp = comp
              value = abap_true ).
    CATCH zaplink_cx_list INTO o_exception.
      RAISE EXCEPTION o_exception.
  ENDTRY.
</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SELECT_DEFAULT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="19 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Select default components from list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="SEL_ACTION" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_SEL_ACTION">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Selection Action : Export, Import, Uninstall"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>TRY.
      CASE sel_action.
        WHEN sel_actions-export.
          select_export( ).
        WHEN sel_actions-import.
          select_import( ).
        WHEN sel_actions-uninstall.
          select_export( ).
        WHEN OTHERS.
          RAISE EXCEPTION TYPE zaplink_cx_list
                     EXPORTING textid = zaplink_cx_list=&gt;invalid_action
                           sel_action = sel_action.
      ENDCASE.
    CATCH zaplink_cx_list INTO o_exception.
      RAISE EXCEPTION o_exception.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SELECT_EXPORT" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Select components from list able to be exported"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>FIELD-SYMBOLS:
    &lt;i&gt; LIKE LINE OF _index.

  LOOP AT _index ASSIGNING &lt;i&gt;.
    CLEAR &lt;i&gt;-selected.
    IF     &lt;i&gt;-o_comp-&gt;_exists = zaplink_connector=&gt;exists
       AND &lt;i&gt;-o_comp-&gt;_connector-exists = zaplink_component=&gt;connexists-exists.
      &lt;i&gt;-selected = abap_true.
    ENDIF.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SELECT_IMPORT" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Select components from list able to be exported"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>FIELD-SYMBOLS:
    &lt;i&gt; LIKE LINE OF _index.

  LOOP AT _index ASSIGNING &lt;i&gt;.
    CLEAR &lt;i&gt;-selected.
    IF     &lt;i&gt;-o_comp-&gt;_exists = zaplink_connector=&gt;exists-not_exists
       AND &lt;i&gt;-o_comp-&gt;_connector-exists = zaplink_component=&gt;connexists-exists.
      &lt;i&gt;-selected = abap_true.
    ENDIF.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="UNSELECT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="20 " AUTHOR="TBENSIAL" CREATEDON="20091119" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Unselect the component"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMP" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091119" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091119">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  TRY.
      _select( comp = comp
              value = abap_false ).
    CATCH zaplink_cx_list INTO o_exception.
      RAISE EXCEPTION o_exception.
  ENDTRY.
</SOURCE>
   </ITEM>
   <ITEM CMPNAME="UPDATE_FROM_ALV" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Update selection from ALV"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_ALV">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ALV table"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>FIELD-SYMBOLS:
    &lt;a&gt; LIKE LINE OF data,
    &lt;i&gt; LIKE LINE OF _index.
  DATA _key TYPE ts_compkey.

  LOOP AT data ASSIGNING &lt;a&gt;.
    _key-type = &lt;a&gt;-type.
    _key-name = &lt;a&gt;-name.
    READ TABLE _index ASSIGNING &lt;i&gt;
         WITH KEY key = _key.
    IF sy-subrc = 0.
      IF NOT &lt;a&gt;-select IS INITIAL.
        &lt;i&gt;-selected = abap_true.
      ELSE.
        &lt;i&gt;-selected = abap_false.
      ENDIF.
    ENDIF.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_ADD_SUBCOMP" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Add sub components"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>data o_list type to_me.
  DATA _comp LIKE LINE OF _allcomp.

  CHECK data IS BOUND.
  o_list = data-&gt;get_subcomponents( ).
  CHECK o_list IS BOUND.

  LOOP AT o_list-&gt;_allcomp INTO _comp.
    _comp-as_sub = abap_true.
    _comp-o_comp = data.
    INSERT _comp INTO TABLE _allcomp.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_SELECT" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091119" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" MTDNEWEXC="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Select the component ?"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COMP" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091119" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="VALUE" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091119" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_LIST" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091119">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  DATA _idx LIKE LINE OF _index.

  _idx = search_index( comp ).
  IF NOT _idx-o_comp IS BOUND.
* Component &apos;&amp;NAME&amp;&apos; (&amp;TYPE&amp;) not found in the collection
    RAISE EXCEPTION TYPE zaplink_cx_list
               EXPORTING textid = zaplink_cx_list=&gt;not_found
                           type = _idx-key-type
                           name = _idx-key-name.
  ENDIF.

  _idx-selected = value.
  MODIFY TABLE _index FROM _idx TRANSPORTING selected.

  IF sy-subrc &lt;&gt; 0.
    RAISE EXCEPTION TYPE zaplink_cx_list
               EXPORTING textid = zaplink_cx_list=&gt;system_error
                           type = _idx-key-type
                           name = _idx-key-name.
  ENDIF.
</SOURCE>
   </ITEM>
  </METHODS>
  <TYPEGROUPS>
   <ITEM TYPEGROUP="ABAP" VERSION="1" IMPLICIT="X"/>
   <ITEM TYPEGROUP="SLIS" VERSION="1" EXPLICIT="X"/>
  </TYPEGROUPS>
  <TYPES>
   <ITEM CMPNAME="TD_ITERATOR_TYPE" VERSION="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="1" TYPE="CHAR1" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Iterator type : all, selected, ...."/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_COMPONENT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="3" TYPE="ZAPLINK_COMPONENT" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_EXCEPTION" VERSION="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="3" TYPE="ZAPLINK_CX_LIST" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Component"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_ME" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" TYPTYPE="3" TYPE="ZAPLINK_LIST" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ZapLink Components list"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_ALLCOMPLIST" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" TYPTYPE="4" SRCROW1="21 " SRCCOLUMN1="4 " SRCROW2="25 " SRCCOLUMN2="22 " R3RELEASE="700" TYPESRC_LENG="143 ">
    BEGIN OF ts_allcomplist,
    key      TYPE ts_compkey,
    o_comp   TYPE to_component,
    as_sub   TYPE abap_bool,
  END OF ts_allcomplist
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="All Component list index line"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_ALV" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" TYPTYPE="4" SRCROW1="34 " SRCCOLUMN1="4 " SRCROW2="44 " SRCCOLUMN2="14 " R3RELEASE="700" TYPESRC_LENG="357 ">
    BEGIN OF ts_alv,
    select     TYPE flag,
    type       TYPE td_comptype,
    typ_txt    TYPE string,
    name       TYPE td_compname,
    plugin     TYPE td_light, &quot;type pools ICON
    status     TYPE td_light, &quot;type pools ICON
    msg        TYPE string,
    devclass   TYPE tadir-devclass,
    srcsystem  TYPE tadir-srcsystem,
  END OF ts_alv
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ALV line"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_ALV_CONF" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" TYPTYPE="4" SRCROW1="29 " SRCCOLUMN1="4 " SRCROW2="32 " SRCCOLUMN2="23 " R3RELEASE="700" TYPESRC_LENG="127 ">
    BEGIN OF ts_alv_conf,
        fields TYPE slis_t_fieldcat_alv,
        layout TYPE slis_layout_alv,
      END OF ts_alv_conf
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ALV configuration"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_COMPLIST" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" TYPTYPE="4" SRCROW1="13 " SRCCOLUMN1="4 " SRCROW2="17 " SRCCOLUMN2="19 " R3RELEASE="700" TYPESRC_LENG="137 ">
    BEGIN OF ts_complist,
    key      TYPE ts_compkey,
    o_comp   TYPE to_component,
    selected TYPE abap_bool,
  END OF ts_complist
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Component list index"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_ALLCOMPLIST" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" TYPTYPE="4" SRCROW1="27 " SRCCOLUMN1="4 " SRCROW2="27 " SRCCOLUMN2="77 " R3RELEASE="700" TYPESRC_LENG="74 ">
    tt_allcomplist TYPE SORTED TABLE OF ts_allcomplist WITH non-UNIQUE KEY KEY
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="All Components (main and sub)"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_ALV" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" TYPTYPE="4" SRCROW1="46 " SRCCOLUMN1="4 " SRCROW2="46 " SRCCOLUMN2="56 " R3RELEASE="700" TYPESRC_LENG="53 ">
    tt_alv TYPE STANDARD TABLE OF ts_alv WITH DEFAULT KEY
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ALV table"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_COMPLIST" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091119" TYPTYPE="4" SRCROW1="19 " SRCCOLUMN1="4 " SRCROW2="19 " SRCCOLUMN2="67 " R3RELEASE="700" TYPESRC_LENG="64 ">
    tt_complist TYPE SORTED TABLE OF ts_complist WITH UNIQUE KEY KEY
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Component list index"/>
    </TEXTS>
   </ITEM>
  </TYPES>
 </RAW>
</ZL_OBJECT>
